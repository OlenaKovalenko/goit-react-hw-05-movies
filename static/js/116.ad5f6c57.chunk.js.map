{"version":3,"file":"static/js/116.ad5f6c57.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRX,EAAAA,EAAAA,IAAU,6BAADY,OAA8BX,IAAW,KAAD,EACzD,OADTM,EAAQE,EAAAI,KACNL,EAAYD,EAASO,KAArBN,QAAOC,EAAAM,OAAA,SACRP,GAAO,wBAAAC,EAAAO,OAAA,GAAAV,EAAA,KACf,kBAJ6B,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAMjBC,EAAmB,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,EAAMC,GAAK,IAAAf,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACrBX,EAAAA,EAAAA,IAAU,uBAADY,OAAwBU,EAAK,aAAAV,OAAYX,IAAW,KAAD,EACpE,OADTM,EAAQgB,EAAAV,KACNL,EAAYD,EAASO,KAArBN,QAAOe,EAAAR,OAAA,SACRP,GAAO,wBAAAe,EAAAP,OAAA,GAAAK,EAAA,KACf,gBAJ+BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAMnBO,EAAc,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EAClBX,EAAAA,EAAAA,IAAU,UAADY,OAAWgB,EAAO,aAAAhB,OAAYX,IAAW,KAAD,EAA1D,OAARM,EAAQsB,EAAAhB,KAAAgB,EAAAd,OAAA,SACPR,EAASO,MAAI,wBAAAe,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAH0BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAKda,EAAc,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAML,GAAO,IAAArB,EAAA2B,EAAA,OAAA7B,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EAClBX,EAAAA,EAAAA,IAAU,UAADY,OAAWgB,EAAO,qBAAAhB,OAAoBX,IAAW,KAAD,EACpE,OADNM,EAAQ4B,EAAAtB,KACNqB,EAAS3B,EAASO,KAAlBoB,KAAIC,EAAApB,OAAA,SACLmB,GAAI,wBAAAC,EAAAnB,OAAA,GAAAiB,EAAA,KACZ,gBAJ0BG,GAAA,OAAAJ,EAAAf,MAAA,KAAAC,UAAA,KAMdmB,EAAiB,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMX,GAAO,IAAArB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACrBX,EAAAA,EAAAA,IAAU,UAADY,OAAWgB,EAAO,qBAAAhB,OAAoBX,IAAW,KAAD,EACjE,OADTM,EAAQiC,EAAA3B,KACNL,EAAYD,EAASO,KAArBN,QAAOgC,EAAAzB,OAAA,SACRP,GAAO,wBAAAgC,EAAAxB,OAAA,GAAAuB,EAAA,KACf,gBAJ6BE,GAAA,OAAAH,EAAArB,MAAA,KAAAC,UAAA,I,8EC3BjBwB,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACPC,OAAO,KACPC,YAAY,IACZC,MAAM,MACNC,eAAe,OACfC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGnB,C,8KCbaC,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAO3BC,EAASH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8C,SCPjBG,EAAuB,SAAHxD,GAAoF,IAADyD,EAAAzD,EAA9E0D,MAAOC,EAAWF,EAAXE,YAAaC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAAcC,EAAYL,EAAZK,aAAcC,EAAQN,EAARM,SAAUC,EAAMP,EAANO,OAIrG,OACEC,EAAAA,EAAAA,MAACf,EAAc,CAAAgB,SAAA,EACX1B,EAAAA,EAAAA,KAAA,OAAK2B,IAAKR,EAAW,mCAAAlD,OAAsCkD,GAL5C,8EAKyES,IAAKR,EAAOS,MAAO,OAC3GJ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACE1B,EAAAA,EAAAA,KAAA,MAAA0B,SAAA,GAAAzD,OAAQmD,EAAK,KAAAnD,OAAIoD,EAAaS,MAAM,KAAK,GAAE,QAC3C9B,EAAAA,EAAAA,KAAA,MAAA0B,SAAA,eAAAzD,OAAoB8D,KAAKC,MAAqB,GAAfV,GAAkB,QACnDtB,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,cACJ1B,EAAAA,EAAAA,KAAA,KAAA0B,SAAIH,KACJvB,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,YACJ1B,EAAAA,EAAAA,KAACc,EAAM,CAAAY,SAAEF,EAAOS,KAAI,SAAAC,GAAK,OAAKlC,EAAAA,EAAAA,KAAA,QAAA0B,SAAOQ,EAAMC,MAAY,WAK/D,E,oBCwCA,EArDqB,WAAO,IAADC,EAAAC,EACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAOH,GAEnBrD,GAAYyD,EAAAA,EAAAA,MAAZzD,QACR0D,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAsB9B,OApBAG,EAAAA,EAAAA,YAAU,WAGe,SAAAC,IAWtB,OAXsBA,GAAA7F,EAAAA,EAAAA,GAAAC,IAAAA,MAAvB,SAAAC,IAAA,IAAA4F,EAAA,OAAA7F,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEIqF,GAAa,GAAMtF,EAAAE,KAAA,GACQc,EAAAA,EAAAA,IAAeG,GAAS,KAAD,EAA5CsE,EAAYzF,EAAAI,KAClB8E,EAAiBO,GAAczF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA0F,GAAA1F,EAAA,SAE/B2F,EAAAA,GAAAA,MAAY,4EAAiE,QAGzD,OAHyD3F,EAAAC,KAAA,GAG7EqF,GAAa,GAAOtF,EAAA4F,OAAA,6BAAA5F,EAAAO,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,CAbIU,GAckB,qBAAZA,GAdU,WAEEqE,EAAAhF,MAAC,KAADC,UAAA,CAarBoF,EAEJ,GAAG,CAAC1E,KAGFwC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGyB,IAAanD,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KACrBC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAI,CAACC,GAAmC,QAAjCzB,EAA2B,QAA3BC,EAAEG,EAAYsB,QAAQC,aAAK,IAAA1B,OAAA,EAAzBA,EAA2B2B,YAAI,IAAA5B,EAAAA,EAAI,IAAIV,UAC/C1B,EAAAA,EAAAA,KAAA,KAAA0B,SAAG,4BAEJqB,IAAkB/C,EAAAA,EAAAA,KAACgB,EAAoB,CAACE,MAAO6B,KAEhD/C,EAAAA,EAAAA,KAAA,MAAA0B,SAAI,2BACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACE1B,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,CAACJ,GAAG,OAAMnC,SAAC,YAGrB1B,EAAAA,EAAAA,KAAA,MAAA0B,UACE1B,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,CAACJ,GAAG,UAASnC,SAAC,kBAG1B1B,EAAAA,EAAAA,KAACkE,EAAAA,SAAQ,CAAAxC,UACP1B,EAAAA,EAAAA,KAACmE,EAAAA,GAAM,QAIf,C","sources":["api.js","components/Loader.js","components/SelectedMovieDetails/SelectedMovieDetails.styled.js","components/SelectedMovieDetails/SelectedMovieDetails.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '22b424da6b6918c86f924199d993847b';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n}  \n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} \n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n} \n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const { cast } = response.data;\n  return cast;\n} \n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} ","import { RevolvingDot } from 'react-loader-spinner'\n\nexport const Loader = () => {\n  return (\n    <RevolvingDot\n          radius=\"45\"\n          strokeWidth=\"5\"\n          color=\"red\"\n          secondaryColor='blue'\n          ariaLabel=\"revolving-dot-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n  )\n}\n","import styled from \"styled-components\";\n\nexport const ContainerMovie = styled.div`\n    display: flex;\n    gap: 20px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n`;\n\nexport const Genres = styled.p`\n    display: flex;\n    gap: 10px;\n`;","import { ContainerMovie, Genres } from \"./SelectedMovieDetails.styled\"\n\nexport const SelectedMovieDetails = ({movie:{poster_path, title, release_date, vote_average, overview, genres}}) => {\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  \n  \n  return (\n    <ContainerMovie>\n        <img src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImg } alt={title} width={400}/>\n        <div>\n          <h1>{`${title}(${release_date.split(\"-\")[0]})`}</h1>\n          <h4>{`User Store: ${Math.round(vote_average * 10)}%`}</h4>\n        <h2>Owerview</h2>\n        <p>{overview}</p> \n        <h3>Genres</h3>\n        <Genres>{genres.map(genre => (<span>{genre.name}</span>)) }</Genres>\n\n        </div>\n    </ContainerMovie>\n  )\n}\n","import { Suspense, useEffect, useRef, useState } from \"react\";\nimport { Link, NavLink, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"api\";\nimport { SelectedMovieDetails } from \"components/SelectedMovieDetails/SelectedMovieDetails\";\nimport toast from \"react-hot-toast\";\nimport { Loader } from \"components/Loader\";\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location);\n\n  const { movieId } = useParams();\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        const fetchedMovie = await fetchMovieById(movieId);\n        setSelectedMovie(fetchedMovie);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try reloading this page! ðŸ¥¹')\n\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (typeof movieId !== 'undefined') {\n      getMovie();\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader/>}\n      <Link to={backLinkRef.current.state?.from ?? '/'}>\n        <b>â—„ Go back â—„</b>\n      </Link>\n      {selectedMovie && (<SelectedMovieDetails movie={selectedMovie} />)\n        }\n      <h5>Additional infomation</h5>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense> \n    </div>\n  )\n}\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrendingList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","results","_context","prev","next","concat","sent","data","abrupt","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","cast","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","Loader","_jsx","RevolvingDot","radius","strokeWidth","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","ContainerMovie","styled","_templateObject","_taggedTemplateLiteral","Genres","_templateObject2","SelectedMovieDetails","_ref$movie","movie","poster_path","title","release_date","vote_average","overview","genres","_jsxs","children","src","alt","width","split","Math","round","map","genre","name","_backLinkRef$current$","_backLinkRef$current$2","location","useLocation","backLinkRef","useRef","useParams","_useState","useState","_useState2","_slicedToArray","selectedMovie","setSelectedMovie","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getMovie","fetchedMovie","t0","toast","finish","getMovie","Link","to","current","state","from","NavLink","Suspense","Outlet"],"sourceRoot":""}