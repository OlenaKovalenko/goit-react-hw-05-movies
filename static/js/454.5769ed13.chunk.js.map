{"version":3,"file":"static/js/454.5769ed13.chunk.js","mappings":"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","sources":["api.js","components/Loader.js","components/MovieList.styled.js","components/MovieList.js","components/FormSearch.js","pages/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '22b424da6b6918c86f924199d993847b';\n\nexport const fetchTrendingList = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n}  \n\nexport const fetchMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} \n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n} \n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const { cast } = response.data;\n  return cast;\n} \n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const { results } = response.data;\n  return results;\n} ","import { RevolvingDot } from 'react-loader-spinner'\n\nexport const Loader = () => {\n  return (\n    <RevolvingDot\n          radius=\"45\"\n          strokeWidth=\"5\"\n          color=\"red\"\n          secondaryColor='blue'\n          ariaLabel=\"revolving-dot-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n  )\n}\n","import styled from \"styled-components\"\n\nexport const WrapMovie = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n`;","import { Link, useLocation } from \"react-router-dom\"\nimport { WrapMovie } from \"./MovieList.styled\";\n\nexport const MovieList = ({ items }) => {\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n    const location = useLocation()\n    \n    return (\n        <WrapMovie>\n            {items.map(({poster_path, name, title, id}) => (\n                <li key={id}>\n                    <Link to={`/movies/${id}`} state={{from: location}}>{\n                        <div>\n                            <img src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImg} alt={name || title} width={250} height={375}/>\n                            <p>{ name || title}</p>\n                        </div>\n                        }\n                    </Link>\n                </li> \n            ))}\n        </WrapMovie>\n    )\n}\n","import { useSearchParams } from \"react-router-dom\"\n\nexport const FormSearch = () => {\n    const [, setSearchParams] = useSearchParams();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        setSearchParams({ query: form.elements.name.value });\n        form.reset();\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Search movies\"\n                autoComplete=\"off\"\n                autoFocus\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n  )\n}\n","import toast from 'react-hot-toast';\nimport { useEffect, useState } from \"react\";\nimport { fetchMoviesBySearch } from \"api\";\nimport { FormSearch } from \"components/FormSearch\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MovieList } from \"components/MovieList\";\nimport { Loader } from \"components/Loader\";\n\nconst Movies = () => {\n  const [movieItems, setMovieItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n    async function getSearchMovies() {\n      try {\n        setIsLoading(true);\n        const searchMovies = await fetchMoviesBySearch(query);\n        setMovieItems(searchMovies);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try reloading this page! ðŸ¥¹')\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getSearchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <FormSearch />\n\n      {query && isLoading && <Loader />}\n      {query && (<MovieList items={movieItems} />)}\n\n    </div>\n  )\n}\n\nexport default Movies;"],"names":["axios","API_KEY","fetchTrendingList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","results","_context","prev","next","concat","sent","data","abrupt","stop","apply","arguments","fetchMoviesBySearch","_ref2","_callee2","query","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","cast","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","Loader","_jsx","RevolvingDot","radius","strokeWidth","color","secondaryColor","ariaLabel","wrapperStyle","wrapperClass","visible","WrapMovie","styled","_templateObject","_taggedTemplateLiteral","MovieList","items","location","useLocation","children","map","poster_path","name","title","id","Link","to","state","from","_jsxs","src","alt","width","height","FormSearch","_useSearchParams","useSearchParams","setSearchParams","_slicedToArray","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","placeholder","autoComplete","autoFocus","_useState","useState","_useState2","movieItems","setMovieItems","_useState3","_useState4","isLoading","setIsLoading","get","useEffect","_getSearchMovies","searchMovies","t0","toast","finish","getSearchMovies"],"sourceRoot":""}